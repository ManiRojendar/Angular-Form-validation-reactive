<!-------html---------->
<!--<div class="container-fluid">
    <table>
<tr>
<td>
<mat-form-field appearance="outline">
    <mat-label>First Name</mat-label>
    <input matInput placeholder="Enter Your First Name">
</mat-form-field>
</td>
<td>
<mat-form-field appearance="outline">
        <mat-label>Last Name</mat-label>
        <input matInput placeholder="Enter Your Last Name">
</mat-form-field>
</td>
</tr>
   
<tr>
  <td>
    <mat-form-field appearance="outline">
            <mat-select placeholder="Gender">
                    <mat-option value="male">Male</mat-option>
                    <mat-option value="female">Female</mat-option>
            </mat-select>
    </mat-form-field>
   </td>
   <td>
<mat-form-field  appearance="outline">
     <input matInput placeholder="Age" type="number" >
      </mat-form-field>
    </td>
 </tr>

 <tr><td>
            <mat-form-field  appearance="outline">
                     <input matInput [matDatepicker]="picker" placeholder="Date of Birth">
                     <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>
                     <mat-datepicker #picker></mat-datepicker>
                     </mat-form-field>
             </td>
             <td>
        <mat-form-field appearance="outline">
            <mat-label>Place of Birth</mat-label>
                <input matInput placeholder="Place of Birth" type="text" >
        </mat-form-field>
        </td>
        </tr>
        <tr> <td>
                    <mat-form-field appearance="outline">
                            <mat-label>Select your blood group</mat-label>
                    <mat-select placeholder="Blood group"  >
                            <mat-option value="o">O+</mat-option>
                            <mat-option value="onev">O-</mat-option>
                            <mat-option value="A">A+</mat-option>
                            <mat-option value="Anev">A-</mat-option>
                            <mat-option value="B">B+</mat-option>
                            <mat-option value="Bnev">B-</mat-option>
                            <mat-option value="AB">AB+</mat-option>
                            <mat-option value="ABnev">AB-</mat-option>
                    </mat-select>
                </mat-form-field>
            </td>
                <td>
                <mat-form-field appearance="outline">
                    <mat-select placeholder="Marital Status	">
                        <mat-option value="Yes">Yes</mat-option>
                        <mat-option value="No">No</mat-option>
                    </mat-select> </mat-form-field>
                    </td>
                  </tr>
                
<tr>
<td>
<mat-form-field appearance="outline">
        <input matInput placeholder="Enter your email" [formControl]="email" required>
        <mat-error *ngIf="email.invalid">{{getErrorMessage()}}</mat-error>
</mat-form-field>
 <td>
<mat-form-field appearance="outline">
        <mat-label>Phone Number</mat-label>
        <input matInput placeholder="Phone Number">
</mat-form-field>
</td>
</tr>
<tr>
            <mat-form-field appearance="outline">
                            <mat-label>Emergency Contact No </mat-label>
                            <input matInput placeholder="Emergency Contact No ">
            </mat-form-field>
</tr>



<tr>
<td>
<mat-form-field appearance="outline">
    <mat-label for ="Permanent">Permanent Address</mat-label>
    <input matInput id="Permanent" placeholder="Enter Your Permanent Address">
</mat-form-field>
</td>  
<td>
<mat-form-field appearance="outline">
        <mat-label for="Present">Present Address</mat-label>
        <input matInput placeholder="Enter Your Present Address">
    </mat-form-field>
</td>
</tr>

<tr>
            <td>  <mat-form-field appearance="outline">
            <mat-label>PAN  Card No</mat-label>
           <input matInput placeholder="Enter Your Pan Card No ">
    </mat-form-field></td>

            <td>
                    <input #file type="file" [hidden]="true" accept="image/*" (change)="upload(file.files)">
                    <button mat-raised-button color="accent" #upload (click)="file.click()">Upload file</button> 
                    </td>
</tr>


<tr>
    <td><mat-form-field appearance="outline">
            <mat-label>Adhaar Card No</mat-label>
            <input matInput placeholder="Enter Your Adhaar Card No ">
    </mat-form-field></td>
    <td>
                    <input #file type="file" [hidden]="true" accept="image/*" (change)="upload(file.files)">
                                          <button mat-raised-button color="accent" #upload (click)="file.click()">Upload file</button> 
                                     </td>
    

</tr>
<tr>
    <mat-form-field appearance="outline">
            <mat-label>UAN/PF A/c No (existing)   </mat-label>
            <input matInput placeholder="Enter Your UAN/PF A/c No (existing)">
    </mat-form-field>
    </tr>
    <tr>
    <td><mat-form-field appearance="outline">
            <mat-label> Driving License No </mat-label>
            <input matInput placeholder="Driving License No">
    </mat-form-field></td>

    <td>
                    <input #file type="file" [hidden]="true" accept="image/*" (change)="upload(file.files)">
                                          <button mat-raised-button color="accent" #upload (click)="file.click()">Upload file</button> 
                                     </td>
    
    </tr>
    <tr>
                    <td>
                      <mat-form-field appearance="outline">
                          <mat-label>Date of Issue</mat-label>
                          <input matInput placeholder="Enter Date of Issue">
                      </mat-form-field>
                    </td>
                    <td>
                      <mat-form-field appearance="outline">
                              <mat-label>Date of Expiry</mat-label>
                              <input matInput placeholder="Enter Date of Expiry">
                      </mat-form-field>
                    </td>
                      </tr>
    


    
  
   </table>   

   
</div>-->



              
              <div class="container" > 
                <form [formGroup]="formGroup" (ngSubmit)="onSubmit()" class="form">
                        <table>
                                <tr>

                               <td>
                                <mat-form-field class="form-element" appearance="outline">
                                                <mat-label>first Name form field</mat-label>
                                    <input matInput placeholder="Name" formControlName="firstname">
                                    <mat-error *ngIf="!formGroup.controls['firstname'].valid && formGroup.controls['firstname'].touched">
                                               firstname is required
                                              </mat-error>
                                  </mat-form-field></td>
                                  <td>

                                  <mat-form-field class="form-element" appearance="outline">
                                                <mat-label>last Name form field</mat-label>
                                    <input matInput placeholder="Name" formControlName="lastname">
                                    <mat-error *ngIf="!formGroup.controls['lastname'].valid && formGroup.controls['lastname'].touched">
                                                lastname is required
                                               </mat-error>
                                  </mat-form-field></td>
                                  </tr>
                                  <tr>

                                                <td> <mat-form-field class="form-element" appearance="outline">
                                               <mat-select placeholder="Gender" formControlName="gender">
                                                                <mat-option ></mat-option>
                                                        <mat-option value="male">Male</mat-option>
                                                        <mat-option value="female">Female</mat-option>
                                                </mat-select>
                                                <mat-error *ngIf="!formGroup.controls['gender'].valid && formGroup.controls['gender'].touched">
                                                               Gender is required
                                                               </mat-error>
                                        </mat-form-field></td>


                                       <td><mat-form-field class="form-element" appearance="outline">
                                                        <mat-label> Age field is required</mat-label>
                                            <input matInput placeholder="Age" formControlName="age">
                                            <mat-error *ngIf="!formGroup.controls['age'].valid && formGroup.controls['age'].touched">
                                                        Age is required
                                                       </mat-error>
                                          </mat-form-field><td>
                                          </tr>

                                          <tr>
                                         <td><mat-form-field  class="form-element" appearance="outline">
                                                        <mat-label> date field is required</mat-label>
                                                        <input matInput [matDatepicker]="picker" placeholder="Date of Birth" formControlName="date">
                                                        <mat-error *ngIf="!formGroup.controls['date'].valid && formGroup.controls['date'].touched">
                                                                       date is required
                                                                       </mat-error>
                                                        <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>
                                                        <mat-datepicker #picker></mat-datepicker>
                                                        </mat-form-field></td>

                                                     

                                                       <td><mat-form-field  class="form-element" appearance="outline">
                                                        <mat-label>Select your blood group</mat-label>
                                                <mat-select placeholder="Blood group" formControlName="blood" >
                                                        <mat-option value="o">O+</mat-option>
                                                        <mat-option value="onev">O-</mat-option>
                                                        <mat-option value="A">A+</mat-option>
                                                        <mat-option value="Anev">A-</mat-option>
                                                        <mat-option value="B">B+</mat-option>
                                                        <mat-option value="Bnev">B-</mat-option>
                                                        <mat-option value="AB">AB+</mat-option>
                                                        <mat-option value="ABnev">AB-</mat-option>
                                                </mat-select>
                                                <mat-error *ngIf="!formGroup.controls['blood'].valid && formGroup.controls['blood'].touched">
                                                               blood name  is required
                                                               </mat-error>

                                            </mat-form-field></td>
                                            </tr>


                                           <tr>
                                            <td><mat-form-field  class="form-element" appearance="outline">
                                                        <mat-select placeholder="Marital Status" formControlName="martial">
                                                            <mat-option value="Yes">Yes</mat-option>
                                                            <mat-option value="No">No</mat-option>
                                                        </mat-select>

                                                        <mat-error *ngIf="!formGroup.controls['martial'].valid && formGroup.controls['martial'].touched">
                                                                        martial status  is required
                                                                       </mat-error>
                                                 </mat-form-field></td>

                                                 <td><mat-form-field class="form-element" appearance="outline">
                                                                <mat-label>Phone Number</mat-label>
                                                                <input matInput placeholder="Phone Number" formControlName="phonenumber">
                                                                <mat-error *ngIf="!formGroup.controls['phonenumber'].valid && formGroup.controls['phonenumber'].touched">
                                                                                Required field, must be 10 numbers.
                                                                              </mat-error>
                                                        </mat-form-field></td>
                                                        </tr>
          

                                                      
                <tr>
        
                  <td><mat-form-field class="form-element" appearance="outline">
                                <mat-label>email form field</mat-label>
                    <input matInput placeholder="Emailaddress" formControlName="email" >
                    <mat-error *ngIf="!formGroup.controls['email'].valid && formGroup.controls['email'].touched">
                      {{ getErrorEmail() }}
                    </mat-error>
                  </mat-form-field></td>

                  <td><mat-form-field class="form-element" appearance="outline">
                                <mat-label>Emergency Contact No </mat-label>
                                <input matInput placeholder="Emergency Contact No " formControlName="emergencynum">
                                <mat-error *ngIf="!name.valid && name.touched">
                                              {{titleAlert}}
                                                </mat-error>

                </mat-form-field></td>
                </tr>

               <tr>
                <td><mat-form-field class="form-element" appearance="outline">
                                <mat-label for ="Permanent">Permanent Address</mat-label>
                                <input matInput id="Permanent" placeholder="Enter Your Permanent Address" formControlName="permanentaddress">
                                <mat-error *ngIf="!formGroup.controls['permanentaddress'].valid && formGroup.controls['permanentaddress'].touched">
                                             permanent address is required
                                               </mat-error>
  
                </mat-form-field></td>

                <td><mat-form-field class="form-element" appearance="outline">
                                <mat-label for="Present">Present Address</mat-label>
                                <input matInput placeholder="Enter Your Present Address"  formControlName="presentaddress">
                                <mat-error *ngIf="!formGroup.controls['presentaddress'].valid && formGroup.controls['presentaddress'].touched">
                                                present address is required
                                               </mat-error>
                               
                 </mat-form-field></td>
                </tr>
                 
                <tr>
                 <td><mat-form-field class="form-element" appearance="outline">
                                <mat-label>PAN  Card No</mat-label>
                               
                                <input matInput placeholder="Enter Your Pan Card No "  formControlName="pannumber">

                                <mat-error *ngIf="!formGroup.controls['pannumber'].valid && formGroup.controls['pannumber'].touched">
                                    Required field, must be 10 numbers.
                                               </mat-error>
                        </mat-form-field></td>
                        <td>
                            <input #file type="file" class="form-element"  accept="image/*"  formControlName="file2">
                            <mat-error *ngIf="!formGroup.controls['file2'].valid && formGroup.controls['file2'].touched">
                               required field
                               </mat-error>
               
                                               
                                             </td>

              
                
                  </tr>



           
                  <tr>


                      <td><mat-form-field class="form-element" appearance="outline">
                          <mat-label>Aadhar  Card No</mat-label>
                         
                          <input matInput placeholder="Enter Your Pan Card No "  formControlName="adharnumber">

                          <mat-error *ngIf="!formGroup.controls['adharnumber'].valid && formGroup.controls['adharnumber'].touched">
                              Required field, must be 12 numbers.
                                         </mat-error>
                  </mat-form-field></td>
                  <td>
                      <input #file type="file" class="form-element" accept="image/*"   formControlName="file1">
                      <mat-error *ngIf="!formGroup.controls['file1'].valid && formGroup.controls['file1'].touched">
                          required field
                          </mat-error>
                                          
                                       </td>
                 
                  </tr>
                  <tr>


                      <td><mat-form-field class="form-element" appearance="outline">
                          <mat-label>driving licence  Card No</mat-label>
                         
                          <input matInput placeholder="Enter Your Pan Card No "  formControlName="drivinglicense">

                          <mat-error *ngIf="!formGroup.controls['drivinglicense'].valid && formGroup.controls['drivinglicense'].touched">
                              Required field, must be 16 numbers.
                                         </mat-error>
                  </mat-form-field></td>

                  <td>
                      <input  #file type="file" accept="image/*" class="form-element"  formControlName="file">
                      <mat-error *ngIf="!formGroup.controls['file'].valid && formGroup.controls['file'].touched">
                          required field
                          </mat-error>
                                            
                                       </td>
                 
                  </tr>
              
                  
              
                  <div class="form-element">
                    <button mat-raised-button color="primary" type="submit" class="button">Save</button>
                  </div>
                </table>
                </form>
              </div>




<!------------------------------------css--------------------------------------------------------->


  
  .container {
    padding: 10px;
    display:flex;
    flex-direction: column;
 
    

  }
  
  .form {
    
    width: 100%;
  }
  
  
  .form-element {
    padding: 5px 0px 25px 2px;
    width: 100%;
  }
  
  <!-------------------------ts------------------------->

import { Component, OnInit } from '@angular/core';
import { FormControl, Validators, FormBuilder, FormGroup } from '@angular/forms';
import { Observable } from 'rxjs';

@Component({
  selector: 'app-personal-details',
  templateUrl: './personal-details.component.html',
  styleUrls: ['./personal-details.component.scss']
})
export class PersonalDetailsComponent implements OnInit {

 email = new FormControl('', [Validators.required, Validators.email]);

  getErrorMessage() {
    return this.email.hasError('required') ? 'You must enter a value' :
        this.email.hasError('email') ? 'Not a valid email' :
            '';
  }
  formGroup: FormGroup;
  titleAlert: string = 'This field is required';
  post: any = '';

  constructor(private formBuilder: FormBuilder) { }

  ngOnInit() {
    this.createForm();
    this.setChangeValidate()
  }

  createForm() {
    let emailregex: RegExp = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
    this.formGroup = this.formBuilder.group({
      'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],
      'name': [null, Validators.required],
      'firstname': [null, Validators.required],
      'lastname': [null, Validators.required],
      'gender': [null, Validators.required],
      'age': [null, [Validators.required, Validators.minLength(2),Validators.maxLength(2)]],
      'date': [null, Validators.required],
      'blood': [null, Validators.required],
      'martial': [null, Validators.required],
      'phonenumber': [null,  [Validators.required, Validators.minLength(10),Validators.maxLength(10)]],
      'emergencynum': [null, Validators.required],
      'file': [null, Validators.required],
      'file1': [null, Validators.required],
      'file2': [null, Validators.required],
    
      'permanentaddress': [null, Validators.required],
      'presentaddress': [null, Validators.required],
      'pannumber': [null,  [Validators.required, Validators.minLength(10),Validators.maxLength(10)]],
      'adharnumber': [null, [Validators.required, Validators.minLength(12),Validators.maxLength(12)]],
      'drivinglicense': [null, [Validators.required, Validators.minLength(16),Validators.maxLength(16)]],
      'password': [null, [Validators.required, this.checkPassword]],
      'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],
      'validate': ''
    });
  }

  setChangeValidate() {
    this.formGroup.get('validate').valueChanges.subscribe(
      (validate) => {
        if (validate == '1') {
          this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);
          this.titleAlert = "You need to specify at least 3 characters";
        } else {
          this.formGroup.get('name').setValidators(Validators.required);
        }
        this.formGroup.get('name').updateValueAndValidity();
      }
    )
  }

  get name() {
    return this.formGroup.get('name') as FormControl
  }

  checkPassword(control) {
    let enteredPassword = control.value
    let passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;
    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { 'requirements': true } : null;
  }

  checkInUseEmail(control) {
    // mimic http database access
    let db = ['tony@gmail.com'];
    return new Observable(observer => {
      setTimeout(() => {
        let result = (db.indexOf(control.value) !== -1) ? { 'alreadyInUse': true } : null;
        observer.next(result);
        observer.complete();
      }, 4000)
    })
  }

  getErrorEmail() {
    return this.formGroup.get('email').hasError('required') ? 'Field is required' :
      this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :
        this.formGroup.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';
  }

  getErrorPassword() {
    return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :
      this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';
  }

  onSubmit() {
    if (this.formGroup.invalid) {
      return;
   }
   alert("success")
    
  }
}
              
              

